@implementation MCNBackButtonRender

-(void *)initWithFrame:(struct CGRect)arg2 forScale:(float)arg3 {
    memcpy(&r2, &arg2, 0x8);
    var_10 = d9;
    stack[-24] = d8;
    r31 = r31 + 0xffffffffffffffe0;
    saved_fp = r29;
    stack[-8] = r30;
    r0 = [self initWithFrame:r2];
    if (r0 != 0x0) {
            *(int32_t *)(int64_t *)&r0->scale = s8;
    }
    return r0;
}

-(void)setPressed:(bool)arg2 {
    *(int8_t *)(int64_t *)&self->pressed = arg2;
    [self setNeedsDisplay];
    return;
}

-(void *)initWithFrame:(struct CGRect)arg2 {
    memcpy(&r2, &arg2, 0x8);
    r31 = r31 - 0x50;
    var_30 = d11;
    stack[-56] = d10;
    var_20 = d9;
    stack[-40] = d8;
    var_10 = r20;
    stack[-24] = r19;
    saved_fp = r29;
    stack[-8] = r30;
    r0 = [[&var_40 super] initWithFrame:r2];
    r19 = r0;
    if (r0 != 0x0) {
            *(int8_t *)(int64_t *)&r19->pressed = 0x0;
            r8 = sign_extend_64(*(int32_t *)ivar_offset(originalFrame));
            *(int128_t *)(r19 + r8) = d11;
            *(int128_t *)(0x8 + r19 + r8) = d10;
            *(int128_t *)(0x10 + r19 + r8) = d9;
            *(int128_t *)(0x18 + r19 + r8) = d8;
            *(int32_t *)(int64_t *)&r19->scale = 0x3f800000;
            [r19 setOpaque:0x0];
            [r19 setAccessibilityIdentifier:@"NF_BACK_BUTTON"];
    }
    r0 = r19;
    return r0;
}

-(struct CGRect)moveHorizontally:(double)arg2 {
    [self frame];
    [self setFrame:arg2];
    [self setNeedsDisplay];
    r0 = [self frame];
    return r0;
}

-(struct CGRect)resetPosition {
    [self setFrame:r2];
    [self setNeedsDisplay];
    r0 = [self frame];
    return r0;
}

-(struct CGSize)sizeThatFits:(struct CGSize)arg2 {
    memcpy(&r2, &arg2, 0x8);
    r0 = self;
    return r0;
}

-(bool)isPressed {
    r0 = *(int8_t *)(int64_t *)&self->pressed;
    return r0;
}

-(void)drawRect:(struct CGRect)arg2 {
    memcpy(&r2, &arg2, 0x8);
    var_A0 = d15;
    stack[-152] = d14;
    var_90 = d13;
    stack[-136] = d12;
    var_80 = d11;
    stack[-120] = d10;
    var_70 = d9;
    stack[-104] = d8;
    var_60 = r28;
    stack[-88] = r27;
    var_50 = r26;
    stack[-72] = r25;
    var_40 = r24;
    stack[-56] = r23;
    var_30 = r22;
    stack[-40] = r21;
    var_20 = r20;
    stack[-24] = r19;
    var_10 = r29;
    stack[-8] = r30;
    r31 = r31 + 0xffffffffffffff60 - 0x2f0;
    *(&var_10 + 0xffffffffffffff60) = **___stack_chk_guard;
    [self bounds];
    v9 = v1;
    d0 = d2 + d2;
    r20 = sign_extend_64(*(int32_t *)ivar_offset(scale));
    r21 = self;
    var_1F0 = self;
    asm { fcvt       d1, s1 };
    asm { fdiv       d0, d0, d1 };
    var_190 = d0;
    d0 = d3 + d3;
    asm { fdiv       d0, d0, d1 };
    var_198 = d0;
    r19 = UIGraphicsGetCurrentContext();
    var_158 = CGColorSpaceCreateDeviceRGB();
    asm { fcvt       d12, s0 };
    CGContextSaveGState(r19);
    CGContextTranslateCTM(r19, r1, r2);
    CGContextScaleCTM(r19, r1, r2);
    CGContextSetAlpha(r19, r1);
    CGContextBeginTransparencyLayer(r19, 0x0);
    r0 = CGPathCreateMutable();
    d15 = 0x0;
    d0 = d12 * *0x100b9efa0 + d15;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d0, d0, d12 };
    var_160 = d0;
    var_170 = *0x100bd5b28;
    d1 = d12 * *0x100bd5b28 + d15;
    asm { fcvt       s1, d1 };
    asm { frinta     s1, s1 };
    asm { fcvt       d1, s1 };
    asm { fdiv       d1, d1, d12 };
    var_1A0 = d1;
    CGPathMoveToPoint(r0, 0x0, r2, r3);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d9, d0, d12 };
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d5, d0, d12 };
    var_1A8 = d5;
    CGPathAddCurveToPoint(r23, 0x0, r2, r3, r4, r5, r6, r7);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d10, d0, d12 };
    var_218 = d9;
    CGPathAddLineToPoint(r23, 0x0, r2, r3);
    r8 = 0x100bd5000;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d14, d0, d12 };
    d13 = *(r8 + 0xb50);
    var_208 = d8;
    var_228 = d11;
    CGPathAddCurveToPoint(r23, 0x0, r2, r3, r4, r5, r6, r7);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d11, d0, d12 };
    var_248 = d14;
    CGPathAddLineToPoint(r23, 0x0, r2, r3);
    var_168 = d12 * 0x4010000000000000;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d15, d0, d12 };
    var_230 = d9;
    var_240 = d13;
    var_220 = d10;
    CGPathAddCurveToPoint(r23, 0x0, r2, r3, r4, r5, r6, r7);
    var_258 = d15;
    CGPathAddLineToPoint(r23, 0x0, r2, r3);
    var_238 = d11;
    d8 = var_1A0;
    CGPathAddCurveToPoint(r23, 0x0, r2, r3, r4, r5, r6, r7);
    CGPathAddLineToPoint(r23, 0x0, r2, r3);
    CGPathCloseSubpath(r23);
    v8 = v13;
    r0 = [UIColor colorWithRed:r2 green:r3 blue:r4 alpha:r5];
    r29 = r29;
    r0 = [r0 retain];
    r20 = r0;
    [r0 setFill];
    r1 = r23;
    CGContextAddPath(r19, r1);
    CGContextFillPath(r19);
    CGPathRelease(r23);
    CGContextEndTransparencyLayer(r19);
    r0 = CGContextSetAlpha(r19, r1);
    d2 = var_168;
    asm { fcvt       s0, d2 };
    asm { frintp     s1, s0 };
    asm { frinta     s0, s0 };
    if (d2 < d8) {
            asm { fcsel      s0, s1, s0, mi };
    }
    var_1E0 = @selector(setFill);
    d0 = 0x0;
    asm { fcvt       d0, s0 };
    asm { fdiv       d0, d0, d12 };
    asm { fcvt       s0, d0 };
    fmodf(r0, r1);
    asm { fcvt       d11, s0 };
    r0 = CGPathCreateMutable();
    d0 = d12 * *0x100bd8f40 + d11;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    d0 = d0 - d11;
    asm { fdiv       d0, d0, d12 };
    var_1D8 = d0;
    var_180 = *0x100bd5b70;
    d1 = d12 * *0x100bd5b70 + d11;
    asm { fcvt       s1, d1 };
    asm { frinta     s1, s1 };
    asm { fcvt       d1, s1 };
    d1 = d1 - d11;
    asm { fdiv       d1, d1, d12 };
    var_1B0 = d1;
    CGPathMoveToPoint(r0, 0x0, r2, r3);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d8, d0, d12 };
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d5, d0, d12 };
    var_1C0 = d5;
    CGPathAddCurveToPoint(r28, 0x0, r2, r3, r4, r5, r6, r7);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d13, d0, d12 };
    var_268 = d8;
    CGPathAddLineToPoint(r28, 0x0, r2, r3);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d9, d0, d12 };
    var_260 = d10;
    var_278 = d14;
    CGPathAddCurveToPoint(r28, 0x0, r2, r3, r4, r5, r6, r7);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d8, d0, d12 };
    var_290 = d9;
    CGPathAddLineToPoint(r28, 0x0, r2, r3);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d11, d0, d12 };
    var_288 = d15;
    var_270 = d13;
    CGPathAddCurveToPoint(r28, 0x0, r2, r3, r4, r5, r6, r7);
    var_2A0 = d11;
    CGPathAddLineToPoint(r28, 0x0, r2, r3);
    var_280 = d8;
    CGPathAddCurveToPoint(r28, 0x0, r2, r3, r4, r5, r6, r7);
    CGPathAddLineToPoint(r28, 0x0, r2, r3);
    CGPathCloseSubpath(r28);
    [[NSMutableArray arrayWithCapacity:r2] retain];
    r21 = [objc_msgSend(*(r25 + 0x700), r22) retain];
    [r20 release];
    r0 = objc_retainAutorelease(r21);
    [r0 CGColor];
    [r27 addObject:r2];
    *(r29 + 0xffffffffffffff50) = 0x0;
    r21 = [objc_msgSend(*(r25 + 0x700), r22) retain];
    [r20 release];
    r0 = objc_retainAutorelease(r21);
    objc_msgSend(r0, r23);
    objc_msgSend(r27, r26);
    *(r29 + 0xffffffffffffff58) = 0x3ff0000000000000;
    CGGradientCreateWithColors(var_158, r27, r29 - 0xb0);
    CGContextAddPath(r19, r28);
    CGContextSaveGState(r19);
    CGAffineTransformMakeRotation(CGContextEOClip(r19));
    *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
    *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
    *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
    r0 = CGPathCreateMutable();
    CGPathAddPath(r0, r29 - 0xe0, r28);
    r0 = CGPathGetBoundingBox(r21);
    v9 = v0;
    r0 = CGRectGetMaxX(r0);
    CGRectGetMinY(r0);
    CGAffineTransformInvert(&var_150);
    *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
    *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
    *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
    d1 = *(int128_t *)(r29 + 0xffffffffffffff28);
    d3 = *(int128_t *)(r29 + 0xffffffffffffff38);
    d9 = *(int128_t *)(r29 + 0xffffffffffffff48) + *0x100bd5b98 * d1 + d10 * d3;
    CGPathRelease(r21);
    CGContextDrawLinearGradient(r19, r25, 0x3, r3, r4);
    CGContextRestoreGState(r19);
    CGGradientRelease(r25);
    r0 = *(&@class(MCConfigurationData) + 0x700);
    r0 = objc_msgSend(r0, r22);
    r25 = [r0 retain];
    [r20 release];
    [r25 setStroke];
    CGContextSetLineWidth(r19, @selector(setStroke));
    CGContextSetLineCap(r19, 0x2);
    CGContextSaveGState(r19);
    CGContextAddPath(r19, r28);
    CGContextAddRect(r19, r28);
    CGContextEOClip(r19);
    CGContextAddPath(r19, r28);
    CGContextStrokePath(r19);
    CGContextRestoreGState(r19);
    CGPathRelease(r28);
    r0 = CGPathCreateMutable();
    r8 = 0x100bd5000;
    d0 = *(r8 + 0xbf0);
    d1 = 0x0;
    d0 = d12 * d0 + d1;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d0, d0, d12 };
    var_168 = d0;
    d10 = *(r8 + 0xbf8);
    var_188 = d10;
    d1 = d12 * d10 + d1;
    asm { fcvt       s1, d1 };
    asm { frinta     s1, s1 };
    asm { fcvt       d1, s1 };
    asm { fdiv       d1, d1, d12 };
    var_1C8 = d1;
    CGPathMoveToPoint(r0, 0x0, r2, r3);
    r8 = 0x100bd5000;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d8, d0, d12 };
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d9, d0, d12 };
    var_1D0 = *(r8 + 0xc08);
    CGPathAddCurveToPoint(r20, 0x0, r2, r3, r4, r5, r6, r7);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d10, d0, d12 };
    var_2D0 = d8;
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d15, d0, d12 };
    var_2C0 = d13;
    var_2D8 = d11;
    CGPathAddCurveToPoint(r20, 0x0, r2, r3, r4, r5, r6, r7);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d8, d0, d12 };
    var_2F0 = d15;
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d11, d0, d12 };
    var_2E8 = d14;
    var_2C8 = d10;
    CGPathAddCurveToPoint(r20, 0x0, r2, r3, r4, r5, r6, r7);
    var_2F8 = d11;
    var_2A8 = d9;
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    var_328 = d15;
    var_2E0 = d8;
    CGPathAddCurveToPoint(r20, 0x0, r2, r3, r4, r5, r6, r7);
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    CGPathCloseSubpath(r20);
    var_1E8 = r24;
    r28 = [objc_msgSend(@class(NSMutableArray), r24) retain];
    [r27 release];
    v15 = v8;
    r21 = [objc_msgSend(*(r21 + 0x700), r22) retain];
    [r25 release];
    r0 = objc_retainAutorelease(r21);
    objc_msgSend(r0, r23);
    objc_msgSend(r28, r26);
    *(r29 + 0xffffffffffffff50) = 0x0;
    r0 = *(r24 + 0x700);
    r0 = objc_msgSend(r0, r22);
    r25 = [r0 retain];
    [r21 release];
    r0 = objc_retainAutorelease(r25);
    var_1F8 = r23;
    objc_msgSend(r0, r23);
    var_200 = r26;
    objc_msgSend(r28, r26);
    *(r29 + 0xffffffffffffff58) = 0x3ff0000000000000;
    CGGradientCreateWithColors(var_158, r28, r29 - 0xb0);
    CGContextAddPath(r19, r20);
    CGContextSaveGState(r19);
    CGAffineTransformMakeRotation(CGContextEOClip(r19));
    *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
    *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
    *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
    r0 = CGPathCreateMutable();
    CGPathAddPath(r0, r29 - 0xe0, r20);
    r0 = CGPathGetBoundingBox(r21);
    v10 = v0;
    v13 = v8;
    v14 = v2;
    r0 = CGRectGetMaxX(r0);
    v8 = v0;
    CGRectGetMinY(r0);
    v11 = v10;
    CGAffineTransformInvert(&var_150);
    *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
    *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
    *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
    d1 = *(int128_t *)(r29 + 0xffffffffffffff28);
    d3 = *(int128_t *)(r29 + 0xffffffffffffff38);
    d10 = *(int128_t *)(r29 + 0xffffffffffffff48) + d10 * d1 + d13 * d3;
    CGPathRelease(r21);
    CGContextDrawLinearGradient(r19, r25, 0x3, r3, r4);
    CGContextRestoreGState(r19);
    CGGradientRelease(r25);
    CGPathRelease(r20);
    CGContextSaveGState(r19);
    CGContextTranslateCTM(r19, r25, r2);
    CGContextRotateCTM(r19, r25);
    CGContextTranslateCTM(r19, r25, r2);
    r0 = CGPathCreateMutable();
    r8 = 0x100bdc000;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d9, d0, d12 };
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d10, d0, d12 };
    CGPathMoveToPoint(r0, 0x0, r2, r3);
    d0 = d12 * *0x100bdccb0 + d11;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d0, d0, d12 };
    var_310 = d0;
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    var_378 = d13;
    d0 = d12 * d13 + d11;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d0, d0, d12 };
    d1 = d12 * *0x100bdccb8 + d11;
    asm { fcvt       s1, d1 };
    asm { frinta     s1, s1 };
    asm { fcvt       d1, s1 };
    asm { fdiv       d1, d1, d12 };
    var_318 = d0;
    var_330 = d1;
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    CGPathAddLineToPoint(r20, 0x0, r2, r3);
    CGPathCloseSubpath(r20);
    r0 = *(r24 + 0x700);
    r0 = objc_msgSend(r0, r22);
    r25 = [r0 retain];
    [r27 release];
    r21 = var_1E0;
    objc_msgSend(r25, r21);
    CGContextAddPath(r19, r20);
    CGContextFillPath(r19);
    CGPathRelease(r20);
    CGContextRestoreGState(r19);
    CGContextSaveGState(r19);
    CGContextTranslateCTM(r19, r20, r2);
    CGContextRotateCTM(r19, r20);
    CGContextTranslateCTM(r19, r20, r2);
    r0 = CGPathCreateMutable();
    r8 = 0x100bdc000;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d15, d0, d12 };
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d13, d0, d12 };
    CGPathMoveToPoint(r0, 0x0, r2, r3);
    d0 = d12 * *0x100bdccf0 + d11;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d0, d0, d12 };
    var_370 = d0;
    CGPathAddLineToPoint(r27, 0x0, r2, r3);
    var_348 = d14;
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d14, d0, d12 };
    asm { fcvt       s0, d0 };
    asm { frinta     s0, s0 };
    asm { fcvt       d0, s0 };
    asm { fdiv       d12, d0, d12 };
    CGPathAddLineToPoint(r27, 0x0, r2, r3);
    var_320 = d15;
    var_338 = d13;
    CGPathAddLineToPoint(r27, 0x0, r2, r3);
    CGPathCloseSubpath(r27);
    r0 = *(r24 + 0x700);
    r0 = objc_msgSend(r0, r22);
    r29 = r29;
    r20 = [r0 retain];
    [r25 release];
    objc_msgSend(r20, r21);
    CGContextAddPath(r19, r27);
    CGContextFillPath(r19);
    CGPathRelease(r27);
    CGContextRestoreGState(r19);
    if ([var_1F0 isPressed] != 0x0) {
            CGContextSetAlpha(r19, @selector(isPressed));
            CGContextBeginTransparencyLayer(r19, 0x0);
            r0 = CGPathCreateMutable();
            CGPathMoveToPoint(r0, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r26, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r26, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r26, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r26, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r26, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r26, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r26, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r26, 0x0, 0x3, r3);
            CGPathCloseSubpath(r26);
            r25 = [[UIColor colorWithRed:0x3 green:r3 blue:r4 alpha:r5] retain];
            [r20 release];
            objc_msgSend(r25, r21);
            CGContextAddPath(r19, r26);
            CGContextFillPath(r19);
            CGPathRelease(r26);
            CGContextEndTransparencyLayer(r19);
            CGContextSetAlpha(r19, r26);
            r0 = CGPathCreateMutable();
            CGPathMoveToPoint(r0, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathCloseSubpath(r20);
            r26 = [objc_msgSend(@class(NSMutableArray), var_1E8) retain];
            [r28 release];
            r21 = [[UIColor colorWithRed:0x2 green:r3 blue:r4 alpha:r5] retain];
            [r25 release];
            r0 = objc_retainAutorelease(r21);
            objc_msgSend(r0, var_1F8);
            objc_msgSend(r26, var_200);
            *(r29 + 0xffffffffffffff50) = 0x0;
            r25 = [[UIColor colorWithRed:r2 green:r3 blue:r4 alpha:r5] retain];
            [r21 release];
            r0 = objc_retainAutorelease(r25);
            objc_msgSend(r0, var_1F8);
            objc_msgSend(r26, var_200);
            *(r29 + 0xffffffffffffff58) = 0x3ff0000000000000;
            CGGradientCreateWithColors(var_158, r26, r29 - 0xb0);
            CGContextAddPath(r19, r20);
            CGContextSaveGState(r19);
            CGAffineTransformMakeRotation(CGContextEOClip(r19));
            *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
            *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
            *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
            r0 = CGPathCreateMutable();
            CGPathAddPath(r0, r29 - 0xe0, r20);
            CGRectGetMinY(CGRectGetMaxX(CGPathGetBoundingBox(r21)));
            CGAffineTransformInvert(&var_150);
            *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
            *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
            *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
            CGPathRelease(r21);
            CGContextDrawLinearGradient(r19, r25, 0x3, r3, r4);
            CGContextRestoreGState(r19);
            CGGradientRelease(r25);
            r25 = [[UIColor colorWithRed:r2 green:r3 blue:r4 alpha:r5] retain];
            [r27 release];
            [r25 setStroke];
            CGContextSaveGState(r19);
            CGContextAddPath(r19, r20);
            CGContextAddRect(r19, r20);
            CGContextEOClip(r19);
            CGContextAddPath(r19, r20);
            CGContextStrokePath(r19);
            CGContextRestoreGState(r19);
            CGPathRelease(r20);
            r0 = CGPathCreateMutable();
            CGPathMoveToPoint(r0, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddCurveToPoint(r20, 0x0, 0x3, r3, r4, r5, r6, r7);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathCloseSubpath(r20);
            r28 = [objc_msgSend(@class(NSMutableArray), var_1E8) retain];
            [r26 release];
            r21 = [[UIColor colorWithRed:0x2 green:r3 blue:r4 alpha:r5] retain];
            [r25 release];
            r0 = objc_retainAutorelease(r21);
            objc_msgSend(r0, var_1F8);
            objc_msgSend(r28, var_200);
            *(r29 + 0xffffffffffffff50) = 0x0;
            r25 = [[UIColor colorWithRed:r2 green:r3 blue:r4 alpha:r5] retain];
            [r21 release];
            r0 = objc_retainAutorelease(r25);
            objc_msgSend(r0, var_1F8);
            objc_msgSend(r28, var_200);
            *(r29 + 0xffffffffffffff58) = 0x3ff0000000000000;
            r27 = var_158;
            CGGradientCreateWithColors(r27, r28, r29 - 0xb0);
            CGContextAddPath(r19, r20);
            CGContextSaveGState(r19);
            CGAffineTransformMakeRotation(CGContextEOClip(r19));
            *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
            *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
            *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
            r0 = CGPathCreateMutable();
            CGPathAddPath(r0, r29 - 0xe0, r20);
            CGRectGetMinY(CGRectGetMaxX(CGPathGetBoundingBox(r21)));
            CGAffineTransformInvert(&var_150);
            *(int128_t *)(r29 + 0xffffffffffffff30) = var_110;
            *(int128_t *)(r29 + 0xffffffffffffff40) = var_100;
            *(int128_t *)(r29 + 0xffffffffffffff20) = var_120;
            CGPathRelease(r21);
            CGContextDrawLinearGradient(r19, r23, 0x3, r3, r4);
            CGContextRestoreGState(r19);
            CGGradientRelease(r23);
            CGPathRelease(r20);
            CGContextSaveGState(r19);
            CGContextTranslateCTM(r19, r23, 0x3);
            CGContextRotateCTM(r19, r23);
            CGContextTranslateCTM(r19, r23, 0x3);
            r0 = CGPathCreateMutable();
            CGPathMoveToPoint(r0, 0x0, 0x3, r3);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathAddLineToPoint(r20, 0x0, 0x3, r3);
            CGPathCloseSubpath(r20);
            r23 = [[UIColor colorWithRed:r2 green:r3 blue:r4 alpha:r5] retain];
            [r25 release];
            [r23 setFill];
            CGContextAddPath(r19, r20);
            CGContextFillPath(r19);
            CGPathRelease(r20);
            CGContextRestoreGState(r19);
            CGContextSaveGState(r19);
            CGContextTranslateCTM(r19, r20, 0x3);
            CGContextRotateCTM(r19, r20);
            CGContextTranslateCTM(r19, r20, 0x3);
            r0 = CGPathCreateMutable();
            CGPathMoveToPoint(r0, 0x0, 0x3, r3);
            CGPathAddLineToPoint(r21, 0x0, 0x3, r3);
            CGPathAddLineToPoint(r21, 0x0, 0x3, r3);
            CGPathAddLineToPoint(r21, 0x0, 0x3, r3);
            CGPathCloseSubpath(r21);
            r0 = @class(UIColor);
            r0 = [r0 colorWithRed:r2 green:r3 blue:r4 alpha:r5];
            r29 = r29;
            r20 = [r0 retain];
            [r23 release];
            [r20 setFill];
            CGContextAddPath(r19, r21);
            CGContextFillPath(r19);
            CGPathRelease(r21);
            CGContextRestoreGState(r19);
    }
    else {
            r27 = var_158;
    }
    CGContextRestoreGState(r19);
    CGColorSpaceRelease(r27);
    [r28 release];
    [r20 release];
    if (**___stack_chk_guard != *(r29 + 0xffffffffffffff60)) {
            __stack_chk_fail();
    }
    return;
}

@end